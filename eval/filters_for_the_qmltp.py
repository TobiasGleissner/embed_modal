from extract_qmltp_info import extract_qmltp_info_from_problem_file_list_to_dicts
from common import get_problem_file_list

file_list = None
qmltp_info = None
cumul_interesting_problems = None
def init(qmltp_dir):
    file_list = get_problem_file_list(qmltp_dir)
    global qmltp_info
    qmltp_info = extract_qmltp_info_from_problem_file_list_to_dicts(file_list)
    global cumul_interesting_problems
    cumul_interesting_problems = get_different_cumul_status()

def get_different_cumul_status():
    ret = {}
    for problem_name,system_dict in qmltp_info.items():
        for system, quantification_dict in system_dict.items():
            if problem_name in ret:
                continue
            if (quantification_dict["$cumulative"] != "Unsolved"):#and system != "$modal_system_S5":
                if (quantification_dict["$cumulative"] != quantification_dict["$constant"] and quantification_dict["$constant"] != "Unsolved") or \
                    (quantification_dict["$cumulative"] != quantification_dict["$varying"] and quantification_dict["$varying"] != "Unsolved" ):
                    ret[problem_name] = system_dict
    return ret

# found by filtering for "qmltepeq" symbol or "=" symbol and hand curation of these problems
qmltp_problems_invalid = [
    "APM007+1.p", # symbol "qmltpeq" without axiomatization
    "SYM052+1.p", # symbol "=" without axiomatization
    "SYM054+1.p", # symbol "qmltpeq" without axiomatization
    "SYM055+1.p", # symbol "=" without axiomatization
    "SYM056+1.p", # symbol "=" without axiomatization
    "SYM057+1.p", # symbol "=" without axiomatization
    "SYM058+1.p", # symbol "qmltpeq" without axiomatization
    "SYM064+1.p", # symbol "=" without axiomatization
    "SYM068+1.p", # symbol "=" and "qmltpeq" without axiomatization
    "SYM069+1.p", # symbol "qmltpeq" without axiomatization
    "SYM070+1.p", # symbol "qmltpeq" without axiomatization
    "SYM071+1.p", # symbol "qmltpeq" without axiomatization
    "SYM072+1.p", # symbol "qmltpeq" without axiomatization
    "SYM085+1.p"  # symbol "=" without axiomatization
]

# from filter_for_equality_qmltpeq.py
qmltp_problems_containing_qmltpeq_symbol = [
     "APM007+1.p",
     "GAL014+1.p",
     "GAL015+1.p",
     "GAL016+1.p",
     "GAL017+1.p",
     "GAL018+1.p",
     "GAL019+1.p",
     "GAL020+1.p",
     "GAL021+1.p",
     "GAL022+1.p",
     "GAL023+1.p",
     "GLC448+1.p",
     "GLC449+1.p",
     "GLC450+1.p",
     "GLC450+2.p",
     "GLC451+1.p",
     "GLC452+1.p",
     "GLC453+1.p",
     "GLC454+1.p",
     "GLC455+1.p",
     "GLC456+1.p",
     "GLC457+1.p",
     "GLC458+1.p",
     "GLC459+1.p",
     "GLC460+1.p",
     "GLC461+1.p",
     "GLC462+1.p",
     "GLC463+1.p",
     "GLC464+1.p",
     "GLC465+1.p",
     "GLC466+1.p",
     "GLC467+1.p",
     "GNL002+1.p",
     "GNL003+1.p",
     "GNL004+1.p",
     "GNL005+1.p",
     "GNL006+1.p",
     "GNL007+1.p",
     "GNL008+1.p",
     "GNL009+1.p",
     "GNL011+1.p",
     "GSE002+3.p",
     "GSE002+4.p",
     "GSE008+3.p",
     "GSE010+3.p",
     "GSE011+3.p",
     "GSE012+4.p",
     "GSE013+4.p",
     "GSE014+3.p",
     "GSE014+4.p",
     "GSE015+4.p",
     "GSE016+1.p",
     "GSE016+4.p",
     "GSE017+1.p",
     "GSE018+1.p",
     "GSE018+4.p",
     "GSE019+4.p",
     "GSE020+1.p",
     "GSE024+1.p",
     "GSE025+1.p",
     "GSE027+1.p",
     "GSE027+4.p",
     "GSE054+1.p",
     "GSE055+1.p",
     "GSE056+1.p",
     "GSE060+1.p",
     "GSE061+1.p",
     "GSE062+1.p",
     "GSE062+4.p",
     "GSE063+1.p",
     "GSE063+3.p",
     "GSE063+4.p",
     "GSE577+3.p",
     "GSE578+3.p",
     "GSE579+3.p",
     "GSE580+3.p",
     "GSE581+3.p",
     "GSE582+3.p",
     "GSE583+3.p",
     "GSE900+1.p",
     "GSE901+1.p",
     "GSE902+1.p",
     "GSE903+1.p",
     "GSE904+1.p",
     "GSE906+1.p",
     "GSE907+1.p",
     "GSE908+1.p",
     "GSE909+1.p",
     "GSE910+1.p",
     "GSE911+1.p",
     "GSE912+1.p",
     "GSE914+1.p",
     "GSE916+1.p",
     "GSE917+1.p",
     "GSE918+1.p",
     "GSE919+1.p",
     "GSE920+1.p",
     "GSE921+1.p",
     "GSE923+1.p",
     "GSE924+1.p",
     "GSE925+1.p",
     "GSE926+1.p",
     "GSY415+1.p",
     "NLP002+1.p",
     "NLP003+1.p",
     "NLP004+1.p",
     "NLP005+1.p",
     "SET002+3.p",
     "SET002+4.p",
     "SET008+3.p",
     "SET010+3.p",
     "SET011+3.p",
     "SET012+4.p",
     "SET013+4.p",
     "SET014+3.p",
     "SET014+4.p",
     "SET015+4.p",
     "SET016+1.p",
     "SET016+4.p",
     "SET017+1.p",
     "SET018+1.p",
     "SET018+4.p",
     "SET019+4.p",
     "SET020+1.p",
     "SET024+1.p",
     "SET025+1.p",
     "SET027+1.p",
     "SET027+4.p",
     "SET054+1.p",
     "SET055+1.p",
     "SET056+1.p",
     "SET060+1.p",
     "SET061+1.p",
     "SET062+1.p",
     "SET062+4.p",
     "SET063+1.p",
     "SET063+3.p",
     "SET063+4.p",
     "SET577+3.p",
     "SET578+3.p",
     "SET579+3.p",
     "SET580+3.p",
     "SET581+3.p",
     "SET582+3.p",
     "SET583+3.p",
     "SET900+1.p",
     "SET901+1.p",
     "SET902+1.p",
     "SET903+1.p",
     "SET904+1.p",
     "SET906+1.p",
     "SET907+1.p",
     "SET908+1.p",
     "SET909+1.p",
     "SET910+1.p",
     "SET911+1.p",
     "SET912+1.p",
     "SET914+1.p",
     "SET916+1.p",
     "SET917+1.p",
     "SET918+1.p",
     "SET919+1.p",
     "SET920+1.p",
     "SET921+1.p",
     "SET923+1.p",
     "SET924+1.p",
     "SET925+1.p",
     "SET926+1.p",
     "SYM054+1.p",
     "SYM058+1.p",
     "SYM068+1.p",
     "SYM069+1.p",
     "SYM070+1.p",
     "SYM071+1.p",
     "SYM072+1.p"
]

# from filter_for_equality_qmltpeq.py
# removed erroneous problems: contains only problems with axiomatiziation of qmltpeq
# erroneous problems hand curated
qmltp_problems_containing_qmltpeq_symbol_with_axiomatization = [
     "GAL014+1.p",
     "GAL015+1.p",
     "GAL016+1.p",
     "GAL017+1.p",
     "GAL018+1.p",
     "GAL019+1.p",
     "GAL020+1.p",
     "GAL021+1.p",
     "GAL022+1.p",
     "GAL023+1.p",
     "GLC448+1.p",
     "GLC449+1.p",
     "GLC450+1.p",
     "GLC450+2.p",
     "GLC451+1.p",
     "GLC452+1.p",
     "GLC453+1.p",
     "GLC454+1.p",
     "GLC455+1.p",
     "GLC456+1.p",
     "GLC457+1.p",
     "GLC458+1.p",
     "GLC459+1.p",
     "GLC460+1.p",
     "GLC461+1.p",
     "GLC462+1.p",
     "GLC463+1.p",
     "GLC464+1.p",
     "GLC465+1.p",
     "GLC466+1.p",
     "GLC467+1.p",
     "GNL002+1.p",
     "GNL003+1.p",
     "GNL004+1.p",
     "GNL005+1.p",
     "GNL006+1.p",
     "GNL007+1.p",
     "GNL008+1.p",
     "GNL009+1.p",
     "GNL011+1.p",
     "GSE002+3.p",
     "GSE002+4.p",
     "GSE008+3.p",
     "GSE010+3.p",
     "GSE011+3.p",
     "GSE012+4.p",
     "GSE013+4.p",
     "GSE014+3.p",
     "GSE014+4.p",
     "GSE015+4.p",
     "GSE016+1.p",
     "GSE016+4.p",
     "GSE017+1.p",
     "GSE018+1.p",
     "GSE018+4.p",
     "GSE019+4.p",
     "GSE020+1.p",
     "GSE024+1.p",
     "GSE025+1.p",
     "GSE027+1.p",
     "GSE027+4.p",
     "GSE054+1.p",
     "GSE055+1.p",
     "GSE056+1.p",
     "GSE060+1.p",
     "GSE061+1.p",
     "GSE062+1.p",
     "GSE062+4.p",
     "GSE063+1.p",
     "GSE063+3.p",
     "GSE063+4.p",
     "GSE577+3.p",
     "GSE578+3.p",
     "GSE579+3.p",
     "GSE580+3.p",
     "GSE581+3.p",
     "GSE582+3.p",
     "GSE583+3.p",
     "GSE900+1.p",
     "GSE901+1.p",
     "GSE902+1.p",
     "GSE903+1.p",
     "GSE904+1.p",
     "GSE906+1.p",
     "GSE907+1.p",
     "GSE908+1.p",
     "GSE909+1.p",
     "GSE910+1.p",
     "GSE911+1.p",
     "GSE912+1.p",
     "GSE914+1.p",
     "GSE916+1.p",
     "GSE917+1.p",
     "GSE918+1.p",
     "GSE919+1.p",
     "GSE920+1.p",
     "GSE921+1.p",
     "GSE923+1.p",
     "GSE924+1.p",
     "GSE925+1.p",
     "GSE926+1.p",
     "GSY415+1.p",
     "NLP002+1.p",
     "NLP003+1.p",
     "NLP004+1.p",
     "NLP005+1.p",
     "SET002+3.p",
     "SET002+4.p",
     "SET008+3.p",
     "SET010+3.p",
     "SET011+3.p",
     "SET012+4.p",
     "SET013+4.p",
     "SET014+3.p",
     "SET014+4.p",
     "SET015+4.p",
     "SET016+1.p",
     "SET016+4.p",
     "SET017+1.p",
     "SET018+1.p",
     "SET018+4.p",
     "SET019+4.p",
     "SET020+1.p",
     "SET024+1.p",
     "SET025+1.p",
     "SET027+1.p",
     "SET027+4.p",
     "SET054+1.p",
     "SET055+1.p",
     "SET056+1.p",
     "SET060+1.p",
     "SET061+1.p",
     "SET062+1.p",
     "SET062+4.p",
     "SET063+1.p",
     "SET063+3.p",
     "SET063+4.p",
     "SET577+3.p",
     "SET578+3.p",
     "SET579+3.p",
     "SET580+3.p",
     "SET581+3.p",
     "SET582+3.p",
     "SET583+3.p",
     "SET900+1.p",
     "SET901+1.p",
     "SET902+1.p",
     "SET903+1.p",
     "SET904+1.p",
     "SET906+1.p",
     "SET907+1.p",
     "SET908+1.p",
     "SET909+1.p",
     "SET910+1.p",
     "SET911+1.p",
     "SET912+1.p",
     "SET914+1.p",
     "SET916+1.p",
     "SET917+1.p",
     "SET918+1.p",
     "SET919+1.p",
     "SET920+1.p",
     "SET921+1.p",
     "SET923+1.p",
     "SET924+1.p",
     "SET925+1.p",
     "SET926+1.p"
]

# found with filter_for_equality_operator.py
qmltp_problems_containing_native_equality = [
    "SYM052+1.p",
    "SYM055+1.p",
    "SYM056+1.p",
    "SYM057+1.p",
    "SYM064+1.p",
    "SYM068+1.p",
    "SYM085+1.p",
    "GSV060+1.p",
    "GSV061+1.p",
    "GSV062+1.p",
    "GSV063+1.p",
    "GSV064+1.p",
    "GSV065+1.p",
    "GSV066+1.p",
    "GSV067+1.p",
    "GSV068+1.p",
    "GSV069+1.p",
    "GSV070+1.p",
    "GSV071+1.p",
    "GSV072+1.p",
    "GSV073+1.p",
    "GSV074+1.p",
    "GSV075+1.p",
    "GSV076+1.p",
    "GSV077+1.p",
    "GSV078+1.p",
    "GSV079+1.p",
    "GSV080+1.p",
    "GSV081+1.p",
    "GSV082+1.P",
    "GSV083+1.p",
    "GSV084+1.p",
    "GSV085+1.p",
    "GSV086+1.p",
    "GSV087+1.p",
    "GSV088+1.p",
    "GSV089+1.p",
    "GSV090+1.p",
    "GSV091+1.p",
    "GSV092+1.p",
    "GSV093+1.p",
    "GSV094+1.p",
    "GSV095+1.p",
    "GSV096+1.p",
    "GSV097+1.p",
    "GSV098+1.p",
    "GSV099+1.p",
    "GSV100+1.p",
    "GSV101+1.p",
    "GSV102+1.p",
    "GSV103+1.p",
    "GSV104+1.p",
    "GSV105+1.p",
    "GSV106+1.p",
    "GSV107+1.p"
]

# found with filter_for_equality_operator.py
# removed erroneous problems: contains only problems that can be fixed (that contain have an axiomatization of equality)
# erroneous problems found by hand curation
qmltp_problems_containing_native_equality_with_axiomatization = [
    "GSV060+1.p",
    "GSV061+1.p",
    "GSV062+1.p",
    "GSV063+1.p",
    "GSV064+1.p",
    "GSV065+1.p",
    "GSV066+1.p",
    "GSV067+1.p",
    "GSV068+1.p",
    "GSV069+1.p",
    "GSV070+1.p",
    "GSV071+1.p",
    "GSV072+1.p",
    "GSV073+1.p",
    "GSV074+1.p",
    "GSV075+1.p",
    "GSV076+1.p",
    "GSV077+1.p",
    "GSV078+1.p",
    "GSV079+1.p",
    "GSV080+1.p",
    "GSV081+1.p",
    "GSV082+1.P",
    "GSV083+1.p",
    "GSV084+1.p",
    "GSV085+1.p",
    "GSV086+1.p",
    "GSV087+1.p",
    "GSV088+1.p",
    "GSV089+1.p",
    "GSV090+1.p",
    "GSV091+1.p",
    "GSV092+1.p",
    "GSV093+1.p",
    "GSV094+1.p",
    "GSV095+1.p",
    "GSV096+1.p",
    "GSV097+1.p",
    "GSV098+1.p",
    "GSV099+1.p",
    "GSV100+1.p",
    "GSV101+1.p",
    "GSV102+1.p",
    "GSV103+1.p",
    "GSV104+1.p",
    "GSV105+1.p",
    "GSV106+1.p",
    "GSV107+1.p"]

# found using filter_for_problems_without_modal_operators
# also identical with the list found using prover_input_error on an embedding, that does not handle non-modal problems
qmltp_problems_without_modal_operators = [
    "NLP001+1.p",
    "NLP002+1.p",
    "NLP003+1.p",
    "NLP004+1.p",
    "NLP005+1.p",
    "SET002+3.p",
    "SET002+4.p",
    "SET008+3.p",
    "SET009+3.p",
    "SET010+3.p",
    "SET011+3.p",
    "SET012+4.p",
    "SET013+4.p",
    "SET014+3.p",
    "SET014+4.p",
    "SET015+4.p",
    "SET016+1.p",
    "SET016+4.p",
    "SET017+1.p",
    "SET018+1.p",
    "SET018+4.p",
    "SET019+4.p",
    "SET020+1.p",
    "SET024+1.p",
    "SET025+1.p",
    "SET027+1.p",
    "SET027+3.p",
    "SET027+4.p",
    "SET043+1.p",
    "SET044+1.p",
    "SET045+1.p",
    "SET046+1.p",
    "SET047+1.p",
    "SET054+1.p",
    "SET055+1.p",
    "SET056+1.p",
    "SET060+1.p",
    "SET061+1.p",
    "SET062+1.p",
    "SET062+3.p",
    "SET062+4.p",
    "SET063+1.p",
    "SET063+3.p",
    "SET063+4.p",
    "SET573+3.p",
    "SET574+3.p",
    "SET575+3.p",
    "SET576+3.p",
    "SET577+3.p",
    "SET578+3.p",
    "SET579+3.p",
    "SET580+3.p",
    "SET581+3.p",
    "SET582+3.p",
    "SET583+3.p",
    "SET900+1.p",
    "SET901+1.p",
    "SET902+1.p",
    "SET903+1.p",
    "SET904+1.p",
    "SET906+1.p",
    "SET907+1.p",
    "SET908+1.p",
    "SET909+1.p",
    "SET910+1.p",
    "SET911+1.p",
    "SET912+1.p",
    "SET913+1.p",
    "SET914+1.p",
    "SET915+1.p",
    "SET916+1.p",
    "SET917+1.p",
    "SET918+1.p",
    "SET919+1.p",
    "SET920+1.p",
    "SET921+1.p",
    "SET923+1.p",
    "SET924+1.p",
    "SET925+1.p",
    "SET926+1.p"
]
